### -------------------------GLOBAL SERVER CONFIGURATION------------------------- ###
quarkus.live-reload.instrumentation=true
quarkus.http.port=8080
quarkus.http.host=0.0.0.0
quarkus.log.level=INFO
quarkus.log.category."org.acme".level=DEBUG
quarkus.log.category."io.quarkus.mutiny".level=WARN
### -------------------------JACOCO CONFIGURATION------------------------- ###
%test.quarkus.jacoco.title=Scala 3 Quarkus Test Coverage
%test.quarkus.jacoco.excludes=**/*Main*/**,**/*MainApp*/**
### -------------------KAFKA CONFIGURATION------------------------- ###
# Use the following to use the external Kafka (eg. docker-compose) on development mode
# kafka.bootstrap.servers=localhost:29092
# or the following to use on production mode only
# %prod.kafka.bootstrap.servers=localhost:29092
# If none of the above is set, the internal Quarkus dev services will be used
# Pre-create topics for the dev services
quarkus.kafka.devservices.topic-partitions.articles=1
quarkus.kafka.devservices.topic-partitions.articles-processed=1
## Below we configure the SmallRye Kafka connector and avoid matching the channels between the Producer
## and the Processor to avoid using the in-memory channels if Kafka is not available (force Kafka only).
# These are the in/out channels for the Producer
mp.messaging.outgoing.articles.connector=smallrye-kafka
mp.messaging.outgoing.articles.topic=articles
mp.messaging.incoming.articles-processed.topic=articles-processed
mp.messaging.incoming.articles-processed.connector=smallrye-kafka
mp.messaging.incoming.articles-processed.value.deserializer=org.acme.ArticleDeserializer
# These are the in/out channels for the Processor. The topic should match the ones in the Producer
mp.messaging.incoming.articles-in.connector=smallrye-kafka
mp.messaging.incoming.articles-in.topic=articles
mp.messaging.incoming.articles-in.value.deserializer=org.acme.ArticleDeserializer
mp.messaging.outgoing.articles-out.connector=smallrye-kafka
mp.messaging.outgoing.articles-out.topic=articles-processed
